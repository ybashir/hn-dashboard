{"version":3,"sources":["BarchartRace.js","App.js","index.js"],"names":["BarChartRace","state","data","width","duration","interpolated_frames","currentKF","intervalId","isPlaying","keyframes","resizeObserver","svgElement","React","createRef","resizeElement","scale","d3","formatDate","categories","stopPlaying","setState","clearInterval","startPlaying","setInterval","timer","length","togglePlay","handleFrameChange","value","updateChart","this","x","props","margin","left","right","y","domain","bars","rangeRound","top","barSize","padding","keyframe","drawChart","svg","current","transition","ease","updateAxis","updateBars","updateLabels","updateTicker","bar","append","attr","selectAll","slice","d","name","join","enter","color","bandwidth","update","exit","remove","call","rank","label","style","textTween","text","g","select","tween","textContent","replace","now","toLocaleDateString","year","month","axis","ticks","tickSizeOuter","tickSizeInner","_","some","undefined","category","categoryByName","Map","map","values","get","a","b","i","t","names","Set","retValues","Array","from","sort","Math","min","ka","kb","k","datevalues","date","Date","datevaluepairs","push","dateString","lastDay","split","m","prevProps","dateRange","startDate","getDateFromString","endDate","filtered","filter","record","getKeyFrames","disconnect","refs","child","parentNode","clientWidth","ResizeObserver","entries","entry","target","updateX","observe","dataset","then","response","catmap","forEach","item","Object","updateY","labels","ticker","ref","flex","align","type","icon","PauseOutlined","CaretRightFilled","onClick","id","max","defaultValue","onChange","tooltipVisible","step","span","height","bottom","marginRight","marginLeft","className","backgroundColor","Component","AppLayout","children","Header","float","theme","mode","lineHeight","Item","href","GithubOutlined","Content","maxWidth","Dashboard","onDateRangeChange","onPreAggChange","onCategoryChange","justify","lg","RangePicker","picker","moment","gutter","DashboardItem","title","size","marginBottom","defaultProps","App","dataset1","dataset2","useState","setDateRange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a311644.chunk.js","sourcesContent":["import React from \"react\"\nimport * as d3 from 'd3'\nimport './BarchartRace.css'\n\nimport {\n    Row,\n    Col,\n    Button,\n    Slider\n  } from \"antd\";\n\n  import {\n   \n    PauseOutlined,\n    CaretRightFilled\n\n} from \"@ant-design/icons\"\n\n\nclass BarChartRace extends React.Component{\n    state={\n        data:[],\n        width: 500,\n        duration: 250,\n        interpolated_frames: 5,\n        currentKF: 0,\n        intervalId: 0,\n        isPlaying: false,\n        keyframes:[]\n    }\n    resizeObserver = null\n    width = 100\n    svgElement = React.createRef()\n    resizeElement = React.createRef()\n    scale = d3.scaleOrdinal(d3.schemeTableau10)\n    formatDate = d3.utcFormat(\"%Y\")\n    categories=[]\n    updateX(){\n        this.x = d3.scaleLinear([0, 1], \n            [this.props.margin.left, \n             this.state.width - this.props.margin.right])\n    }\n    updateY(){\n        this.y = d3.scaleBand()\n          .domain(d3.range(this.props.bars + 1))\n          .rangeRound(\n            [this.props.margin.top, \n            this.props.margin.top + \n            this.props.barSize * (this.props.bars + 1 + 0.1)]\n          )\n          .padding(0.1)\n    } \n    stopPlaying = () => {  \n        this.setState({\n            isPlaying:false\n        })\n        clearInterval(this.state.intervalId) \n    }\n    startPlaying = () => {\n        const intervalId = setInterval(this.timer, this.state.duration)\n        this.setState({\n            isPlaying: true,\n            intervalId: intervalId,\n            currentKF: this.state.currentKF === this.state.keyframes.length - 1 ?\n                        0 : \n                        this.state.currentKF\n        }) \n    }\n    togglePlay = () => {\n        const isPlaying = this.state.isPlaying\n        if(!isPlaying){\n            this.startPlaying()\n        }else{\n            this.stopPlaying()\n        }\n    }\n    handleFrameChange = (value) => {        \n        if(this.state.isPlaying){\n            this.stopPlaying()\n        }\n        this.updateChart(+value)\n    }\n    timer = () => {         \n        if (this.state.currentKF < this.state.keyframes.length - 1){\n            this.updateChart(this.state.currentKF+1)        \n        }else{\n            this.stopPlaying()\n        }        \n    }\n    updateChart(keyframe){\n            this.setState({\n                currentKF: keyframe\n            },\n            ()=>{\n                this.drawChart()\n            }\n        )\n    }\n    drawChart(){\n        const svg = d3.select(this.svgElement.current)\n        const keyframe = this.state.keyframes[this.state.currentKF]\n        const transition = svg.transition()\n            .duration(this.state.duration)\n            .ease(d3.easeLinear)\n        this.x.domain([0, keyframe[1][0].value]);\n        this.updateAxis(keyframe, transition);\n        this.updateBars(keyframe, transition);\n        this.updateLabels(keyframe, transition);\n        this.updateTicker(keyframe, transition);         \n    }\n    bars(svg) {\n        let bar = svg.append(\"g\")\n            .attr(\"fill-opacity\", 0.6)\n            .selectAll(\"rect\") \n        return ([date, data], transition) => {\n           bar = bar\n          .data(data.slice(0, this.props.bars), d => d.name)\n          .join(\n            enter => enter.append(\"rect\")\n              .attr(\"fill\", this.color())\n              .attr(\"height\", this.y.bandwidth())\n              .attr(\"x\", this.x(0))\n              .attr(\"y\", this.y(this.props.bars))\n              .attr(\"width\", d => this.x(d.value) - this.x(0)),\n            (update) => {\n                return update\n            },\n            exit => exit.transition(transition).remove()\n              .attr(\"y\", this.y(this.props.bars))\n              .attr(\"width\", d => this.x(d.value) - this.x(0))\n          )\n          .call(bar => bar.transition(transition)\n            .attr(\"y\", d => this.y(d.rank))\n            .attr(\"width\", d => this.x(d.value) - this.x(0)))            \n        }\n    }\n    labels(svg) {\n        let label = svg.append(\"g\")\n            .style(\"font\", \"bold 12px var(--sans-serif)\")\n            .style(\"font-size\",\"12px\")\n            .style(\"font-weight\",\"bold\")\n            .style(\"font-variant-numeric\", \"tabular-nums\")\n            .attr(\"text-anchor\", \"end\")\n            .selectAll(\"text\")\n        let textTween=this.textTween\n        let parseNumber= string => +string.replace(/,/g, \"\")    \n        return ([date, data], transition) => label = label\n          .data(data.slice(0, this.props.bars), d => d.name)\n          .join(\n            enter => enter.append(\"text\")\n              .attr(\"transform\", d => `translate(${this.x(d.value)},${this.y(this.props.bars)})`)\n              .attr(\"y\", this.y.bandwidth() / 2)\n              .attr(\"x\", -6)\n              .attr(\"dy\", \"-0.25em\")\n              .text(d => d.name)\n              .call(text => text.append(\"tspan\")\n                .attr(\"fill-opacity\", 0.7)\n                .attr(\"font-weight\", \"normal\")\n                .attr(\"x\", -6)\n                .attr(\"dy\", \"1.15em\")),\n            update => update,\n            exit => exit.transition(transition).remove()\n              .attr(\"transform\", d => `translate(${this.x(d.value)},${this.y(this.props.bars)})`)\n          )\n          .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(${this.x(d.value)},${this.y(d.rank)})`)\n            .call(g => g.select(\"tspan\").tween(\"text\", function(d) {\n                return textTween(parseNumber(this.textContent), d.value);\n              })))\n    }\n\n    ticker(svg) { \n        const now = svg.append(\"text\")\n                    .style(\"font-weight\",'bold')\n                    .style(\"font-size\", `${this.props.barSize}px`)\n                    .style(\"font-variant-numeric\", \"tabular-nums\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"x\", this.state.width - 6)\n                    .attr(\"y\", this.props.margin.top + this.props.barSize * (this.props.bars - 0.45))\n                    .attr(\"dy\", \"0.32em\")\n                    .text(this.formatDate(this.state.keyframes[0][0]))\n        return ([date], transition) => {\n            const options = {  year: 'numeric', month: 'short'}\n            const current = this.state.keyframes[this.state.currentKF][0].toLocaleDateString(\"en-US\", options)\n            now.attr(\"x\", this.state.width - 6)\n            now.text(current)\n        }\n    }\n    axis(svg) {\n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(0,${this.props.margin.top})`)\n        \n        const axis = d3.axisTop(this.x)\n            .ticks(this.state.width / 160)\n            .tickSizeOuter(0)\n            .tickSizeInner(-this.props.barSize * (this.props.bars + this.y.padding()))\n        \n        return (_, transition) => {\n            axis.ticks(this.state.width/160)\n            g.transition(transition).call(axis)\n            g.select(\".tick:first-of-type text\").remove()\n            g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"white\")\n            g.select(\".domain\").remove()\n        }\n    }\n    color(){\n        const scale = d3.scaleOrdinal(d3.schemeTableau10)\n        if (this.state.data.some(d => d.category !== undefined)) {\n            const categoryByName = new Map(this.state.data.map(d => [d.name, d.category]))\n            scale.domain(categoryByName.values())\n            return d => scale(categoryByName.get(d.name))\n        }\n        return d => scale(d.name)\n    }    \n    textTween(a, b) {\n        const i = d3.interpolateNumber(a, b)\n        \n        return function(t) {\n            this.textContent = d3.format(\",d\")(i(t))\n        }\n    }\n    rank(a,b,t,data) {\n        const names = new Set(data.map(d => d.name))\n        const retValues = Array.from(names, name => ({\n                name, \n                value: (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t\n            })\n        )\n        retValues.sort((a, b) => d3.descending(a.value, b.value))\n        for (let i = 0; i < retValues.length; ++i) \n            retValues[i].rank = Math.min(this.props.bars, i)\n        return retValues\n    }\n    getKeyFrames(data){        \n        let ka, a, kb, b\n        let k = this.state.interpolated_frames\n        let datevalues = Array.from(d3.rollup(data, ([d]) => d.value, d => +d.date, d => d.name))\n                        .map(([date, data]) => [new Date(date), data])\n                        .sort(([a], [b]) => d3.ascending(a, b))\n        let keyframes = []\n        let datevaluepairs = d3.pairs(datevalues)\n        \n        for ([[ka, a], [kb, b]] of datevaluepairs) {\n            for (let i = 0; i < k; ++i) {\n                const t = i / k\n                keyframes.push([\n                    new Date(ka * (1 - t) + kb * t),\n                    this.rank(a,b,t,data)\n                ])\n            }\n        }\n        keyframes.push([new Date(kb), this.rank(a,b,1,data)]) \n        return keyframes\n    }\n    //Gets date from yyyy-mm format either the first or last day of month\n    getDateFromString(dateString, lastDay=false){\n        let [y,m] = dateString.split('-')\n        if (lastDay){\n            return new Date(y,m,0)\n        }\n        return new Date(y,m-1,1)\n    }\n    componentDidUpdate(prevProps) {  \n        if (this.props.dateRange && this.props.dateRange !== prevProps.dateRange) {\n            let startDate = this.getDateFromString(this.props.dateRange[0])\n            let endDate = this.getDateFromString(this.props.dateRange[1],true)\n            const filtered = this.state.data.filter(record => \n                record['date'] >= startDate && record['date'] <= endDate)\n            const keyframes = this.getKeyFrames(filtered)\n            this.setState({\n                    keyframes: keyframes\n                },\n                ()=>{           \n                    this.drawChart()\n                }               \n            )\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n    }\n    componentDidMount(){\n        const width = this.refs.child.parentNode.clientWidth\n        this.resizeObserver = new ResizeObserver((entries) => {\n            for (let entry of entries) {  \n                this.setState({\n                    width:entry.target.clientWidth\n                },()=>{\n                    if (this.state.keyframes.length>0){\n \n                        this.updateX()\n                        this.drawChart()\n                    }                    \n                })\n            }\n        })  \n        this.resizeObserver.observe(this.resizeElement.current);\n        this.props.dataset.then(\n            (response) => {\n                const keyframes = this.getKeyFrames(response)\n                const categoryByName = new Map(response.map(d => [d.name, d.category]))\n                this.scale.domain(categoryByName.values())\n                let catmap = {}                       \n                response.forEach((item) => {\n                    if (item.category !== \"\"){\n                        if (item.category in catmap){\n                            catmap[item.category] = catmap[item.category] + item.value\n                        }else{\n                            catmap[item.category] = item.value\n                        }                     \n\n                    }                                \n                })\n                this.categories = Object.entries(catmap).sort((a,b)=>b[1]-a[1]).map(item=>item[0]).slice(0,this.props.bars)\n                this.setState({ \n                        data:response,\n                        width:width,\n                        keyframes: keyframes\n                    },\n                    ()=>{   \n                        const svg = d3.select(this.svgElement.current)\n                        this.updateX()\n                        this.updateY()\n                        this.updateBars = this.bars(svg)\n                        this.updateAxis = this.axis(svg)\n                        this.updateLabels = this.labels(svg)\n                        this.updateTicker = this.ticker(svg)             \n                        this.drawChart()\n                    }               \n                )\n            }\n        )\n    } \n    render(){\n        return (\n            <div ref=\"child\">        \n                    <Row>\n                        <Col flex=\"40px\" align=\"left\">\n                            <Button\n                            type=\"primary\"\n                            style={{align:\"left\"}}\n                            \n                            icon={this.state.isPlaying ?\n                                <PauseOutlined /> :\n                                <CaretRightFilled />\n\n                            }                  \n                            onClick={this.togglePlay}\n                        /></Col>\n                        <Col flex=\"auto\"> <Slider \n                                id=\"typeinp\" \n                                min={0}\n                                max={this.state.keyframes.length-1} \n                                value={this.state.currentKF} \n                                defaultValue={0}\n                                onChange={this.handleFrameChange}\n                                tooltipVisible={false}\n                                step={1}\n                            />\n                        </Col>            \n                    </Row>\n                    \n                    <Row>\n                        <Col span='24' ref={this.resizeElement}>\n                            <svg ref={this.svgElement}\n                                style={{\n                                    width: \"100%\",\n                                    height: this.props.margin.top + \n                                            this.props.margin.bottom + \n                                            this.props.barSize * this.props.bars,\n                                    marginRight: this.props.margin.right,\n                                    marginLeft: this.props.margin.left\n                                }}\n                            >\n                            </svg>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row align=\"middle\">\n                        {                            \n                            this.categories.map(item => \n                                <Col flex=\"left\">\n                                    <Row>\n                                        <Col className=\"legend-box\"\n                                             style={{backgroundColor:this.scale(item)}}>\n                                        </Col>\n                                        <Col className=\"legend-label\" align=\"left\">{item}</Col>\n                                    </Row>\n                                    \n                                </Col>\n                            )\n                        }\n                    </Row>\n            </div>            \n        )        \n    }\n}\nexport default BarChartRace","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, Layout, DatePicker, Menu } from \"antd\";\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport BarChartRace from \"./BarchartRace\";\nimport * as d3 from \"d3\";\nimport moment from \"moment\";\n\nconst AppLayout = ({ children }) => (\n  <Layout>\n    <Layout.Header>\n      <div\n        style={{\n          float: \"left\",\n        }}\n      >\n        <h2\n          style={{\n            color: \"#fff\",\n            margin: 0,\n            marginRight: \"1em\",\n          }}\n        >\n          HackerNews Who's Hiring: Analytics\n        </h2>\n      </div>\n      <div\n        style={{\n          float: \"right\",\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\n          <Menu.Item key=\"1\">\n            <a href=\"https://github.com/ybashir/hn-dashboard\">\n              <GithubOutlined />\n              &nbsp; Github\n            </a>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </Layout.Header>\n    <Layout.Content\n      style={{\n        padding: \"0 25px 25px 25px\",\n        margin: \"25px auto\",\n        width: \"100%\",\n        maxWidth: 1200,\n      }}\n    >\n      {children}\n    </Layout.Content>\n  </Layout>\n);\n\nconst Dashboard = ({\n  children,\n  onPreAggChange,\n  onDateRangeChange,\n  onCategoryChange,\n}) => [\n  <Row type=\"flex\" justify=\"space-around\" align=\"top\">\n    <Col span={24} lg={24} align=\"right\">\n      <DatePicker.RangePicker\n        picker={\"month\"}\n        onChange={(date, dateString) => onDateRangeChange(dateString)}\n        defaultValue={[\n          moment(\"2014/01/01\", \"YYYY/MM/DD\"),\n          moment(\"2023/10/01\", \"YYYY/MM/DD\"),\n        ]}\n      />\n    </Col>\n  </Row>,\n  <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24}>\n    {children}\n  </Row>,\n];\n\nconst DashboardItem = ({ children, title, size, height }) => (\n  <Col span={24} lg={size}>\n    <Card\n      title={title}\n      style={{\n        marginBottom: \"24px\",\n      }}\n    >\n      <div style={{ height: height }}>{children}</div>\n    </Card>\n  </Col>\n);\n\nDashboardItem.defaultProps = {\n  size: 12,\n};\n\nfunction App() {\n  var dataset1 = d3.csv(\"data/tech_by_month_flat.csv\", function (d) {\n    return {\n      date: new Date(d.date),\n      name: d.name,\n      category: d.category,\n      value: +d.value,\n    };\n  });\n  var dataset2 = d3.csv(\"data/location_by_month_flat.csv\", function (d) {\n    return {\n      date: new Date(d.date),\n      name: d.name,\n      category: d.category,\n      value: +d.value,\n    };\n  });\n\n  const [dateRange, setDateRange] = useState(0);\n  return (\n    <div className=\"App\">\n      <AppLayout>\n        <Dashboard\n          onDateRangeChange={(dateRange) => {\n            if (dateRange[0] !== \"\" && dateRange[1] !== \"\") {\n              setDateRange(dateRange);\n            }\n          }}\n        >\n          <DashboardItem\n            size={24}\n            title=\"Most popular tech keywords in HN job ads\"\n          >\n            <BarChartRace\n              dataset={dataset1}\n              bars={12}\n              barSize={32}\n              dateRange={dateRange}\n              margin={{\n                top: 20,\n                right: 6,\n                bottom: 6,\n                left: 0,\n              }}\n            />\n          </DashboardItem>\n          <DashboardItem size={24} title=\"Most popular locations in HN job ads\">\n            <BarChartRace\n              dataset={dataset2}\n              bars={12}\n              barSize={32}\n              dateRange={dateRange}\n              margin={{\n                top: 20,\n                right: 6,\n                bottom: 6,\n                left: 0,\n              }}\n            />\n          </DashboardItem>\n        </Dashboard>\n      </AppLayout>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}